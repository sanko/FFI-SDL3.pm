name: windows_1

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

jobs:
  perl:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [windows-latest]
        include:
        #- os: ubuntu-latest
        #  path: ~/.cache/perl
        #- os: macos-latest
        #  path: ~/Library/Caches/perl
        - os: windows-latest
          path: ~\AppData\Local\perl\Cache
          env:
            PERL5LIB: ~\AppData\Local\perl\Cache\lib\perl5
            PERL_LOCAL_LIB_ROOT: ~\AppData\Local\perl\Cache
            PERL_MB_OPT: --install_base ~\AppData\Local\perl\Cache
            PERL_MM_OPT: INSTALL_BASE=~\AppData\Local\perl\Cache
    steps:
      - uses: actions/checkout@v2

      - name: Set up Perl
        run: |
          choco install strawberryperl
          echo "~\AppData\Local\perl\Cache\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\strawberry\c\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\strawberry\perl\site\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\strawberry\perl\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: perl -V
        run: |
          perl -V
      - name: Cache CPAN modules
        uses: actions/cache@v2
        #env:
        #    cache-name: cache-cpan-modules
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-perl-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-perl-
      - name: Install Dependencies
        run: |
          cpanm -n Minilla
          cpanm --installdeps -v -n .
      - name: Run Tests
        run: minil test --all
