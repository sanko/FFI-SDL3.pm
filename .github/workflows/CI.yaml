name: CI

on:
    push:
        branches: '*'
    pull_request:
        branches: '*'

jobs:
  perl-job:
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu-latest, macos-latest, windows-latest]
        perl: [ '5.20', '5.30', '5.32', 'latest' ]

    runs-on: ${{matrix.runner}}
    name: OS ${{matrix.runner}} Perl ${{matrix.perl}}

    #container:
    #  image: perl:${{ matrix.perl-version }}

    steps:
    - name: Setup Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install wayland-protocols \
          pkg-config \
          ninja-build \
          libasound2-dev \
          libdbus-1-dev \
          libegl1-mesa-dev \
          libgl1-mesa-dev \
          libgles2-mesa-dev \
          libglu1-mesa-dev \
          libibus-1.0-dev \
          libpulse-dev \
          libsdl2-2.0-0 \
          libsndio-dev \
          libudev-dev \
          libwayland-dev \
          libwayland-client++0 \
          wayland-scanner++ \
          libwayland-cursor++0 \
          libx11-dev \
          libxcursor-dev \
          libxext-dev \
          libxi-dev \
          libxinerama-dev \
          libxkbcommon-dev \
          libxrandr-dev \
          libxss-dev \
          libxt-dev \
          libxv-dev \
          libxxf86vm-dev \
          libdrm-dev \
          libgbm-dev\
          libpulse-dev \
          libpango1.0-dev
        sudo apt install meson
        git clone --depth 1 https://gitlab.gnome.org/jadahl/libdecor.git --branch 0.1.0
        cd libdecor
        meson build --buildtype release -Ddemo=false -Ddbus=disabled
        ninja -C build
        sudo meson install -C build
    - uses: actions/checkout@v2

    - name: Set up perl
      uses: shogo82148/actions-setup-perl@v1.11.0
      with:
          perl-version: ${{ matrix.perl }}
          distribution: ${{ ( startsWith( matrix.runner, 'windows-' ) && 'strawberry' ) || 'default' }}

    - name: perl -V
      run: perl -V

    #- name: Install libsdl2
    #  if: ${{ startsWith( matrix.runner, 'ubuntu-' )  }}
    #  run: sudo apt-get install libsdl2-dev

    - name: Install dependencies
      run: |
          cpanm --installdeps --notest -v --mirror http://cpan.cpantesters.org/ .

    - name: Show content of log files on Linux
      if: ${{ failure() && startsWith( matrix.runner, 'ubuntu-' )  }}
      run: cat /home/runner/.cpanm/work/*/build.log

    - name: Show content of log files on Mac
      if: ${{ failure() && startsWith( matrix.runner, 'macos-' )  }}
      run: cat /Users/runner/.cpanm/work/*/build.log

    - name: Show content of log files on Windows
      if: ${{ failure() && startsWith( matrix.runner, 'windows-' )  }}
      run: cat C:\Users\RUNNER~1\.cpanm\work\*\build.log

    - name: Regular Tests
      run: |
          #prove -v -o -m
          cpanm -v .
